{
  "formatVersion": 1,
  "database": {
    "version": 3,
    "identityHash": "638bc3c31f1b93fca01ebfa01da59d8f",
    "entities": [
      {
        "tableName": "transactions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `type` INTEGER NOT NULL, `category` INTEGER NOT NULL, `amount` REAL NOT NULL, `reason` TEXT NOT NULL, `timestamp` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "reason",
            "columnName": "reason",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "recurrings",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `amount` REAL NOT NULL, `title` TEXT NOT NULL, `details` TEXT, `active` INTEGER NOT NULL, `type` INTEGER NOT NULL, `period` INTEGER NOT NULL, `firstCharge` INTEGER NOT NULL, `lastCharge` INTEGER NOT NULL, `nextCharge` INTEGER NOT NULL DEFAULT 0)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "details",
            "columnName": "details",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "period",
            "columnName": "period",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "firstCharge",
            "columnName": "firstCharge",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastCharge",
            "columnName": "lastCharge",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "nextCharge",
            "columnName": "nextCharge",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '638bc3c31f1b93fca01ebfa01da59d8f')"
    ]
  }
}